// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_plaf_basic_BasicScrollBarUI__
#define __javax_swing_plaf_basic_BasicScrollBarUI__

#pragma interface

#include <javax/swing/plaf/ScrollBarUI.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      class Graphics;
      class Container;
      class Component;
      class Rectangle;
      class Color;
      class Dimension;
    }
    namespace beans
    {
      class PropertyChangeListener;
    }
  }
  namespace javax
  {
    namespace swing
    {
      class JComponent;
      class Icon;
      class JScrollBar;
      class Timer;
      class JButton;
      namespace plaf
      {
        class ComponentUI;
        namespace basic
        {
          class BasicScrollBarUI;
          class BasicScrollBarUI$TrackListener;
          class BasicScrollBarUI$ScrollListener;
          class BasicScrollBarUI$ModelListener;
          class BasicScrollBarUI$ArrowButtonListener;
        }
      }
    }
  }
}

class javax::swing::plaf::basic::BasicScrollBarUI : public ::javax::swing::plaf::ScrollBarUI
{
public:
  virtual void addLayoutComponent (::java::lang::String *, ::java::awt::Component *) { }
public:  // actually protected
  virtual void configureScrollBarColors ();
  virtual ::javax::swing::plaf::basic::BasicScrollBarUI$ArrowButtonListener *createArrowButtonListener ();
  virtual ::javax::swing::JButton *createIncreaseButton (jint);
  virtual ::javax::swing::JButton *createDecreaseButton (jint);
  virtual ::javax::swing::plaf::basic::BasicScrollBarUI$ModelListener *createModelListener ();
  virtual ::java::beans::PropertyChangeListener *createPropertyChangeListener ();
  virtual ::javax::swing::plaf::basic::BasicScrollBarUI$ScrollListener *createScrollListener ();
  virtual ::javax::swing::plaf::basic::BasicScrollBarUI$TrackListener *createTrackListener ();
public:
  static ::javax::swing::plaf::ComponentUI *createUI (::javax::swing::JComponent *);
  virtual ::java::awt::Dimension *getMaximumSize (::javax::swing::JComponent *);
public:  // actually protected
  virtual ::java::awt::Dimension *getMaximumThumbSize ();
public:
  virtual ::java::awt::Dimension *getMinimumSize (::javax::swing::JComponent *);
public:  // actually protected
  virtual ::java::awt::Dimension *getMinimumThumbSize ();
private:
  void calculatePreferredSize ();
public:
  virtual ::java::awt::Dimension *getPreferredSize (::javax::swing::JComponent *);
public:  // actually protected
  virtual ::java::awt::Rectangle *getThumbBounds ();
  virtual ::java::awt::Rectangle *getTrackBounds ();
  virtual void installComponents ();
  virtual void installDefaults ();
  virtual void installKeyboardActions () { }
  virtual void installListeners ();
public:
  virtual void installUI (::javax::swing::JComponent *);
  virtual void layoutContainer (::java::awt::Container *);
public:  // actually protected
  virtual void layoutHScrollbar (::javax::swing::JScrollBar *);
  virtual void layoutVScrollbar (::javax::swing::JScrollBar *);
public:
  virtual ::java::awt::Dimension *minimumLayoutSize (::java::awt::Container *);
  virtual void paint (::java::awt::Graphics *, ::javax::swing::JComponent *);
public:  // actually protected
  virtual void paintDecreaseHighlight (::java::awt::Graphics *);
  virtual void paintIncreaseHighlight (::java::awt::Graphics *);
  virtual void paintThumb (::java::awt::Graphics *, ::javax::swing::JComponent *, ::java::awt::Rectangle *);
  virtual void paintTrack (::java::awt::Graphics *, ::javax::swing::JComponent *, ::java::awt::Rectangle *);
public:
  virtual ::java::awt::Dimension *preferredLayoutSize (::java::awt::Container *);
  virtual void removeLayoutComponent (::java::awt::Component *) { }
public:  // actually protected
  virtual void scrollByBlock (jint);
  virtual void scrollByUnit (jint);
  virtual void setThumbBounds (jint, jint, jint, jint);
  virtual void uninstallComponents ();
  virtual void uninstallDefaults ();
  virtual void uninstallKeyboardActions () { }
  virtual void uninstallListeners ();
public:
  virtual void uninstallUI (::javax::swing::JComponent *);
private:
  jint valueForYPosition (jint);
  jint valueForXPosition (jint);
public:
  BasicScrollBarUI ();
public:  // actually protected
  ::javax::swing::plaf::basic::BasicScrollBarUI$ArrowButtonListener * __attribute__((aligned(__alignof__( ::javax::swing::plaf::ScrollBarUI )))) buttonListener;
  ::javax::swing::plaf::basic::BasicScrollBarUI$ModelListener *modelListener;
  ::java::beans::PropertyChangeListener *propertyChangeListener;
  ::javax::swing::plaf::basic::BasicScrollBarUI$ScrollListener *scrollListener;
  ::javax::swing::plaf::basic::BasicScrollBarUI$TrackListener *trackListener;
  ::javax::swing::JButton *decrButton;
  ::javax::swing::JButton *incrButton;
  static ::java::awt::Dimension *maximumThumbSize;
  static ::java::awt::Dimension *minimumThumbSize;
  ::java::awt::Color *thumbColor;
  ::java::awt::Color *thumbDarkShadowColor;
  ::java::awt::Color *thumbHighlightColor;
  ::java::awt::Color *thumbLightShadowColor;
  ::java::awt::Color *trackHighlightColor;
  ::java::awt::Color *trackColor;
  ::java::awt::Rectangle *trackRect;
  ::java::awt::Rectangle *thumbRect;
  static jint DECREASE_HIGHLIGHT;
  static jint INCREASE_HIGHLIGHT;
  static jint NO_HIGHLIGHT;
private:
  static jint POSITIVE_SCROLL;
  static jint NEGATIVE_SCROLL;
  ::java::awt::Dimension *preferredSize;
public:  // actually protected
  jint trackHighlight;
  jboolean isDragging;
  ::javax::swing::Timer *scrollTimer;
  ::javax::swing::JScrollBar *scrollbar;
private:
  static ::javax::swing::Icon *upIcon;
  static ::javax::swing::Icon *downIcon;
  static ::javax::swing::Icon *leftIcon;
  static ::javax::swing::Icon *rightIcon;

  friend class javax_swing_plaf_basic_BasicScrollBarUI$arrowIcon;
  friend class javax_swing_plaf_basic_BasicScrollBarUI$TrackListener;
  friend class javax_swing_plaf_basic_BasicScrollBarUI$ScrollListener;
  friend class javax_swing_plaf_basic_BasicScrollBarUI$PropertyChangeHandler;
  friend class javax_swing_plaf_basic_BasicScrollBarUI$ModelListener;
  friend class javax_swing_plaf_basic_BasicScrollBarUI$ArrowButtonListener;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_plaf_basic_BasicScrollBarUI__ */
