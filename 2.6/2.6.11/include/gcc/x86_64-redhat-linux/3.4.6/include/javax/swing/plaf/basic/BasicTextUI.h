// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_plaf_basic_BasicTextUI__
#define __javax_swing_plaf_basic_BasicTextUI__

#pragma interface

#include <javax/swing/plaf/TextUI.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      class Point;
      class Rectangle;
      class Graphics;
      class Dimension;
    }
  }
  namespace javax
  {
    namespace swing
    {
      class JComponent;
      namespace text
      {
        class Element;
        class View;
        class Position$Bias;
        class Highlighter;
        class Caret;
        class EditorKit;
        class JTextComponent;
      }
      namespace plaf
      {
        namespace basic
        {
          class BasicTextUI;
          class BasicTextUI$RootView;
        }
      }
    }
  }
}

class javax::swing::plaf::basic::BasicTextUI : public ::javax::swing::plaf::TextUI
{
public:
  BasicTextUI ();
public:  // actually protected
  virtual ::javax::swing::text::Caret *createCaret ();
  virtual ::javax::swing::text::Highlighter *createHighlighter ();
  ::javax::swing::text::JTextComponent *getComponent () { return textComponent; }
public:
  virtual void installUI (::javax::swing::JComponent *);
public:  // actually protected
  virtual void installDefaults () { }
  virtual void installListeners () { }
  virtual void installKeyboardActions () { }
public:
  virtual void uninstallUI (::javax::swing::JComponent *);
public:  // actually protected
  virtual void uninstallDefaults () { }
  virtual void uninstallListeners () { }
  virtual void uninstallKeyboardActions () { }
  virtual ::java::lang::String *getPropertyPrefix () = 0;
public:
  virtual ::java::awt::Dimension *getPreferredSize (::javax::swing::JComponent *);
  void paint (::java::awt::Graphics *, ::javax::swing::JComponent *);
public:  // actually protected
  virtual void paintSafely (::java::awt::Graphics *);
  virtual void paintBackground (::java::awt::Graphics *);
public:
  virtual void damageRange (::javax::swing::text::JTextComponent *, jint, jint);
  virtual void damageRange (::javax::swing::text::JTextComponent *, jint, jint, ::javax::swing::text::Position$Bias *, ::javax::swing::text::Position$Bias *) { }
  virtual ::javax::swing::text::EditorKit *getEditorKit (::javax::swing::text::JTextComponent *) { return kit; }
  virtual jint getNextVisualPositionFrom (::javax::swing::text::JTextComponent *, jint, ::javax::swing::text::Position$Bias *, jint, JArray< ::javax::swing::text::Position$Bias *> *);
  virtual ::javax::swing::text::View *getRootView (::javax::swing::text::JTextComponent *) { return reinterpret_cast< ::javax::swing::text::View *> (rootView); }
  virtual ::java::awt::Rectangle *modelToView (::javax::swing::text::JTextComponent *, jint);
  virtual ::java::awt::Rectangle *modelToView (::javax::swing::text::JTextComponent *, jint, ::javax::swing::text::Position$Bias *) { return 0; }
  virtual jint viewToModel (::javax::swing::text::JTextComponent *, ::java::awt::Point *);
  virtual jint viewToModel (::javax::swing::text::JTextComponent *, ::java::awt::Point *, JArray< ::javax::swing::text::Position$Bias *> *);
  virtual ::javax::swing::text::View *create (::javax::swing::text::Element *) { return 0; }
  virtual ::javax::swing::text::View *create (::javax::swing::text::Element *, jint, jint) { return 0; }
public:  // actually protected
  virtual ::java::awt::Rectangle *getVisibleEditorRect ();
  void setView (::javax::swing::text::View *);
public: // actually package-private
  ::javax::swing::plaf::basic::BasicTextUI$RootView * __attribute__((aligned(__alignof__( ::javax::swing::plaf::TextUI )))) rootView;
  ::javax::swing::text::JTextComponent *textComponent;
  jint gap;
  ::javax::swing::text::EditorKit *kit;

  friend class javax_swing_plaf_basic_BasicTextUI$RootView;
  friend class javax_swing_plaf_basic_BasicTextUI$BasicHighlighter;
  friend class javax_swing_plaf_basic_BasicTextUI$BasicCaret;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_plaf_basic_BasicTextUI__ */
