// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_plaf_basic_BasicMenuItemUI__
#define __javax_swing_plaf_basic_BasicMenuItemUI__

#pragma interface

#include <javax/swing/plaf/MenuItemUI.h>
#include <gcj/array.h>

extern "Java"
{
  namespace javax
  {
    namespace swing
    {
      class KeyStroke;
      class MenuElement;
      class MenuSelectionManager;
      namespace plaf
      {
        namespace basic
        {
          class BasicMenuItemUI;
        }
        class ComponentUI;
      }
      class JComponent;
      class JMenuItem;
      namespace event
      {
        class MouseInputListener;
        class MenuKeyListener;
        class MenuDragMouseListener;
      }
      class Icon;
    }
  }
  namespace java
  {
    namespace beans
    {
      class PropertyChangeListener;
    }
    namespace awt
    {
      class FontMetrics;
      class Rectangle;
      class Graphics;
      class Dimension;
      class Color;
      class Font;
    }
  }
}

class javax::swing::plaf::basic::BasicMenuItemUI : public ::javax::swing::plaf::MenuItemUI
{
public:
  BasicMenuItemUI ();
public:  // actually protected
  virtual ::javax::swing::event::MenuDragMouseListener *createMenuDragMouseListener (::javax::swing::JComponent *);
  virtual ::javax::swing::event::MenuKeyListener *createMenuKeyListener (::javax::swing::JComponent *);
  virtual ::javax::swing::event::MouseInputListener *createMouseInputListener (::javax::swing::JComponent *);
public:
  static ::javax::swing::plaf::ComponentUI *createUI (::javax::swing::JComponent *);
public:  // actually protected
  virtual void doClick (::javax::swing::MenuSelectionManager *);
public:
  virtual ::java::awt::Dimension *getMaximumSize (::javax::swing::JComponent *) { return 0; }
  virtual ::java::awt::Dimension *getMinimumSize (::javax::swing::JComponent *) { return 0; }
  virtual JArray< ::javax::swing::MenuElement *> *getPath ();
public:  // actually protected
  virtual ::java::awt::Dimension *getPreferredMenuItemSize (::javax::swing::JComponent *, ::javax::swing::Icon *, ::javax::swing::Icon *, jint);
public:
  virtual ::java::awt::Dimension *getPreferredSize (::javax::swing::JComponent *);
public:  // actually protected
  virtual ::java::lang::String *getPropertyPrefix () { return 0; }
  virtual void installComponents (::javax::swing::JMenuItem *) { }
  virtual void installDefaults ();
  virtual void installKeyboardActions () { }
  virtual void installListeners ();
public:
  virtual void installUI (::javax::swing::JComponent *);
  virtual void paint (::java::awt::Graphics *, ::javax::swing::JComponent *);
public:  // actually protected
  virtual void paintBackground (::java::awt::Graphics *, ::javax::swing::JMenuItem *, ::java::awt::Color *);
  virtual void paintMenuItem (::java::awt::Graphics *, ::javax::swing::JComponent *, ::javax::swing::Icon *, ::javax::swing::Icon *, ::java::awt::Color *, ::java::awt::Color *, jint);
  virtual void paintText (::java::awt::Graphics *, ::javax::swing::JMenuItem *, ::java::awt::Rectangle *, ::java::lang::String *);
  virtual void uninstallComponents (::javax::swing::JMenuItem *) { }
  virtual void uninstallDefaults ();
  virtual void uninstallKeyboardActions () { }
  virtual void uninstallListeners ();
public:
  virtual void uninstallUI (::javax::swing::JComponent *);
  virtual void update (::java::awt::Graphics *, ::javax::swing::JComponent *);
private:
  ::java::lang::String *getAcceleratorText (::javax::swing::KeyStroke *);
  ::java::awt::Rectangle *getAcceleratorRect (::javax::swing::KeyStroke *, ::java::awt::FontMetrics *);
  void paintAccelerator (::java::awt::Graphics *, ::javax::swing::JMenuItem *, ::java::awt::Rectangle *, ::java::lang::String *);
public:  // actually protected
  ::java::awt::Font * __attribute__((aligned(__alignof__( ::javax::swing::plaf::MenuItemUI )))) acceleratorFont;
  ::java::awt::Color *acceleratorForeground;
  ::java::awt::Color *acceleratorSelectionForeground;
  ::javax::swing::Icon *arrowIcon;
  ::javax::swing::Icon *checkIcon;
  jint defaultTextIconGap;
  ::java::awt::Color *disabledForeground;
  ::javax::swing::event::MenuDragMouseListener *menuDragMouseListener;
  ::javax::swing::JMenuItem *menuItem;
  ::javax::swing::event::MenuKeyListener *menuKeyListener;
  ::javax::swing::event::MouseInputListener *mouseInputListener;
  jboolean oldBorderPainted;
  ::java::awt::Color *selectionBackground;
  ::java::awt::Color *selectionForeground;
private:
  ::java::lang::String *acceleratorDelimiter;
  ::java::beans::PropertyChangeListener *propertyChangeListener;
  jint defaultAcceleratorLabelGap;

  friend class javax_swing_plaf_basic_BasicMenuItemUI$PropertyChangeHandler;
  friend class javax_swing_plaf_basic_BasicMenuItemUI$MenuKeyHandler;
  friend class javax_swing_plaf_basic_BasicMenuItemUI$MenuDragMouseHandler;
  friend class javax_swing_plaf_basic_BasicMenuItemUI$MouseInputHandler;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_plaf_basic_BasicMenuItemUI__ */
